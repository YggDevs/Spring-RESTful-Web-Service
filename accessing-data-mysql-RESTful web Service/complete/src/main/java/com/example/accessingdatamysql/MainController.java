package com.example.accessingdatamysql;
import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@PostMapping(path="/add") // Map ONLY POST Requests
	public @ResponseBody String addNewUser
			(@RequestParam String name
			, @RequestParam String email) {
		
		
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		n.setName(name);
		n.setEmail(email);
		userRepository.save(n);
		return "Saved";
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
	
	   
    @RequestMapping(path="/delete/{id}",method = RequestMethod.PUT)    
    public String delete(@PathVariable int id){    
    	userRepository.deleteById(id);    
        return "borrado";    
    }  
    
    
    
    //curl -X DELETE localhost:8080/demo/delete/43
    
    
    
    @DeleteMapping("delete/{id}")
    void deleteStudent(@PathVariable Integer id) {
        this.userRepository.deleteById(id);
            
    } 
    

    
    
    
    
    @RequestMapping(value = "/{delete/{id}}")
    public @ResponseBody void deleteAuthorizationServer
    (@RequestHeader(value="Authorization") 
    String authorization,
     @PathVariable("authorizationUrl") String authorizationUrl){
        System.out.printf("Testing: You tried to delete %s using %s\n", authorizationUrl, authorization);
    }
    
    
    //estas clases de abajo estan en pruebas
    
    
    @GetMapping(value = "/agregar")
    public String agregarProducto(Model model) {
        model.addAttribute("user", new User());
        return "productos/agregar_producto";
    }
    
   
    
    
    
    private String message;

    private List<String> tasks = Arrays.asList("a", "b", "c", "d", "e", "f", "g");

    @GetMapping("/welcome")
    public String main(Model model) {
        model.addAttribute("message", message);
        model.addAttribute("tasks", tasks);

        return "welcome"; //view
    }  
    
    
    // /hello?name=kotlin
    @GetMapping("/hello")
    public String mainWithParam(
            @RequestParam(name = "name", required = false, defaultValue = "") 
			String name, Model model) {

        model.addAttribute("message", name);

        return "welcome"; //view
    }
    
    @RequestMapping("/hola")
    public String hola(Model modelo) {
      modelo.addAttribute("mensaje","hola desde thymeleaf");
      return "hola";
    }
    
    
    
    
    
	
}
	